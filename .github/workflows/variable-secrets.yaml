name: Exploring Variables and Secrets

on:
    push

env:
    CONTAINER_REGISTRY: docker.io 
    DOCKER_USERNAME: mktej
    IMAGE_NAME: github-actions-nginx

jobs:
    # docker:
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker build 
    #           run: docker build -t docker.io/dockerUsername/imageName:latest 

    #         - name: Docker login
    #           run: docker login --username=dockerUsername --password=s3cUrePaSsw0rd

    #         - name: Docker Publish
    #           run: docker push docker.io/dockerUsername/imageName:latest
              
    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker run
    #           run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

############# environment variables at STEP level ######################################
    # docker:
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker build
    #           env:
    #             CONTAINER_REGISTRY: docker.io 
    #             DOCKER_USERNAME: mktej
    #             IMAGE_NAME: github-actions-nginx         
    #           run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest 

    #         - name: Docker login
    #           env:
    #             DOCKER_USERNAME: mktej
    #             DOCKER_PASSWORD: devmohittejbe049    
    #           run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #         - name: Docker Publish
    #           env:
    #             CONTAINER_REGISTRY: docker.io 
    #             DOCKER_USERNAME: mktej
    #             IMAGE_NAME: github-actions-nginx
    #           run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
            
    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker run
    #           env:
    #             CONTAINER_REGISTRY: docker.io 
    #             DOCKER_USERNAME: mktej
    #             IMAGE_NAME: github-actions-nginx
    #           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

############# environment variables at JOB level #############################################################              
    # docker:
    #     env:
    #         CONTAINER_REGISTRY: docker.io 
    #         DOCKER_USERNAME: mktej
    #         IMAGE_NAME: github-actions-nginx

    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker build
    #           run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest 

    #         - name: Docker login
    #           env:
    #             DOCKER_PASSWORD: devmohittejbe049    
    #           run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #         - name: Docker Publish
    #           run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
            
    # deploy:
    #     env:
    #         CONTAINER_REGISTRY: docker.io 
    #         DOCKER_USERNAME: mktej
    #         IMAGE_NAME: github-actions-nginx
    #     needs: docker
    #     runs-on: ubuntu-latest

    #     steps:
    #         - name: Docker run
    #           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

############# environment variables at WORKFLOW level ######################################
    docker:
        runs-on: ubuntu-latest

        steps:
            - name: Docker build
              run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest 

            - name: Docker login
              env:
                DOCKER_PASSWORD: devmohittejbe049    
              run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

            - name: Docker Publish
              run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest
            
    deploy:
        needs: docker
        runs-on: ubuntu-latest

        steps:
            - name: Docker run
              run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest